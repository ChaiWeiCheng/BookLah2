function cov_1a6u3c9cxe(){var path="C:\\Users\\teiji\\TP Year 2-3 Coding Projects\\DevOps Y2\\BookLah\\utils\\bookingUtil.js";var hash="11258aa28b3056631448b470f1b915ff300f6561";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\teiji\\TP Year 2-3 Coding Projects\\DevOps Y2\\BookLah\\utils\\bookingUtil.js",statementMap:{"0":{start:{line:1,column:11},end:{line:1,column:33}},"1":{start:{line:4,column:4},end:{line:4,column:32}},"2":{start:{line:8,column:4},end:{line:8,column:25}},"3":{start:{line:13,column:26},end:{line:13,column:53}},"4":{start:{line:15,column:2},end:{line:15,column:36}},"5":{start:{line:22,column:2},end:{line:22,column:56}},"6":{start:{line:25,column:28},end:{line:25,column:43}},"7":{start:{line:27,column:2},end:{line:43,column:3}},"8":{start:{line:28,column:24},end:{line:28,column:61}},"9":{start:{line:31,column:25},end:{line:31,column:90}},"10":{start:{line:31,column:55},end:{line:31,column:89}},"11":{start:{line:32,column:4},end:{line:37,column:5}},"12":{start:{line:34,column:6},end:{line:36,column:9}},"13":{start:{line:38,column:4},end:{line:38,column:46}},"14":{start:{line:40,column:4},end:{line:42,column:7}},"15":{start:{line:46,column:2},end:{line:81,column:3}},"16":{start:{line:47,column:24},end:{line:47,column:61}},"17":{start:{line:48,column:17},end:{line:48,column:30}},"18":{start:{line:49,column:21},end:{line:49,column:38}},"19":{start:{line:50,column:17},end:{line:50,column:30}},"20":{start:{line:51,column:17},end:{line:51,column:30}},"21":{start:{line:54,column:4},end:{line:58,column:5}},"22":{start:{line:55,column:6},end:{line:57,column:9}},"23":{start:{line:61,column:4},end:{line:65,column:5}},"24":{start:{line:62,column:6},end:{line:64,column:9}},"25":{start:{line:68,column:26},end:{line:68,column:134}},"26":{start:{line:68,column:54},end:{line:68,column:133}},"27":{start:{line:69,column:4},end:{line:73,column:5}},"28":{start:{line:70,column:6},end:{line:72,column:9}},"29":{start:{line:74,column:23},end:{line:74,column:62}},"30":{start:{line:75,column:28},end:{line:75,column:78}},"31":{start:{line:76,column:4},end:{line:76,column:49}},"32":{start:{line:78,column:4},end:{line:80,column:7}},"33":{start:{line:84,column:2},end:{line:138,column:3}},"34":{start:{line:85,column:15},end:{line:85,column:28}},"35":{start:{line:86,column:21},end:{line:86,column:38}},"36":{start:{line:87,column:17},end:{line:87,column:30}},"37":{start:{line:88,column:17},end:{line:88,column:30}},"38":{start:{line:91,column:4},end:{line:95,column:5}},"39":{start:{line:92,column:6},end:{line:94,column:9}},"40":{start:{line:98,column:4},end:{line:102,column:5}},"41":{start:{line:99,column:6},end:{line:101,column:9}},"42":{start:{line:103,column:24},end:{line:103,column:61}},"43":{start:{line:104,column:19},end:{line:104,column:24}},"44":{start:{line:107,column:30},end:{line:109,column:84}},"45":{start:{line:107,column:58},end:{line:109,column:83}},"46":{start:{line:110,column:4},end:{line:114,column:5}},"47":{start:{line:111,column:6},end:{line:113,column:9}},"48":{start:{line:115,column:4},end:{line:123,column:5}},"49":{start:{line:115,column:17},end:{line:115,column:18}},"50":{start:{line:116,column:27},end:{line:116,column:41}},"51":{start:{line:117,column:6},end:{line:122,column:7}},"52":{start:{line:118,column:8},end:{line:118,column:43}},"53":{start:{line:119,column:8},end:{line:119,column:35}},"54":{start:{line:120,column:8},end:{line:120,column:35}},"55":{start:{line:121,column:8},end:{line:121,column:24}},"56":{start:{line:124,column:4},end:{line:133,column:5}},"57":{start:{line:125,column:6},end:{line:125,column:85}},"58":{start:{line:126,column:6},end:{line:128,column:9}},"59":{start:{line:130,column:6},end:{line:132,column:9}},"60":{start:{line:135,column:4},end:{line:137,column:7}},"61":{start:{line:140,column:0},end:{line:144,column:2}}},fnMap:{"0":{name:"isValidDateFormat",decl:{start:{line:11,column:9},end:{line:11,column:26}},loc:{start:{line:11,column:33},end:{line:16,column:1}},line:11},"1":{name:"isValidTimeFormat",decl:{start:{line:19,column:9},end:{line:19,column:26}},loc:{start:{line:19,column:33},end:{line:23,column:1}},line:19},"2":{name:"viewUserBookings",decl:{start:{line:24,column:15},end:{line:24,column:31}},loc:{start:{line:24,column:42},end:{line:44,column:1}},line:24},"3":{name:"(anonymous_3)",decl:{start:{line:31,column:44},end:{line:31,column:45}},loc:{start:{line:31,column:55},end:{line:31,column:89}},line:31},"4":{name:"addBooking",decl:{start:{line:45,column:15},end:{line:45,column:25}},loc:{start:{line:45,column:36},end:{line:82,column:1}},line:45},"5":{name:"(anonymous_5)",decl:{start:{line:68,column:43},end:{line:68,column:44}},loc:{start:{line:68,column:54},end:{line:68,column:133}},line:68},"6":{name:"updateBooking",decl:{start:{line:83,column:15},end:{line:83,column:28}},loc:{start:{line:83,column:39},end:{line:139,column:1}},line:83},"7":{name:"(anonymous_7)",decl:{start:{line:107,column:47},end:{line:107,column:48}},loc:{start:{line:107,column:58},end:{line:109,column:83}},line:107}},branchMap:{"0":{loc:{start:{line:22,column:9},end:{line:22,column:55}},type:"binary-expr",locations:[{start:{line:22,column:9},end:{line:22,column:33}},{start:{line:22,column:37},end:{line:22,column:55}}],line:22},"1":{loc:{start:{line:32,column:4},end:{line:37,column:5}},type:"if",locations:[{start:{line:32,column:4},end:{line:37,column:5}},{start:{line:32,column:4},end:{line:37,column:5}}],line:32},"2":{loc:{start:{line:54,column:4},end:{line:58,column:5}},type:"if",locations:[{start:{line:54,column:4},end:{line:58,column:5}},{start:{line:54,column:4},end:{line:58,column:5}}],line:54},"3":{loc:{start:{line:61,column:4},end:{line:65,column:5}},type:"if",locations:[{start:{line:61,column:4},end:{line:65,column:5}},{start:{line:61,column:4},end:{line:65,column:5}}],line:61},"4":{loc:{start:{line:68,column:54},end:{line:68,column:133}},type:"binary-expr",locations:[{start:{line:68,column:54},end:{line:68,column:83}},{start:{line:68,column:87},end:{line:68,column:108}},{start:{line:68,column:112},end:{line:68,column:133}}],line:68},"5":{loc:{start:{line:69,column:4},end:{line:73,column:5}},type:"if",locations:[{start:{line:69,column:4},end:{line:73,column:5}},{start:{line:69,column:4},end:{line:73,column:5}}],line:69},"6":{loc:{start:{line:91,column:4},end:{line:95,column:5}},type:"if",locations:[{start:{line:91,column:4},end:{line:95,column:5}},{start:{line:91,column:4},end:{line:95,column:5}}],line:91},"7":{loc:{start:{line:98,column:4},end:{line:102,column:5}},type:"if",locations:[{start:{line:98,column:4},end:{line:102,column:5}},{start:{line:98,column:4},end:{line:102,column:5}}],line:98},"8":{loc:{start:{line:107,column:58},end:{line:109,column:83}},type:"binary-expr",locations:[{start:{line:107,column:58},end:{line:107,column:75}},{start:{line:109,column:4},end:{line:109,column:33}},{start:{line:109,column:37},end:{line:109,column:58}},{start:{line:109,column:62},end:{line:109,column:83}}],line:107},"9":{loc:{start:{line:110,column:4},end:{line:114,column:5}},type:"if",locations:[{start:{line:110,column:4},end:{line:114,column:5}},{start:{line:110,column:4},end:{line:114,column:5}}],line:110},"10":{loc:{start:{line:117,column:6},end:{line:122,column:7}},type:"if",locations:[{start:{line:117,column:6},end:{line:122,column:7}},{start:{line:117,column:6},end:{line:122,column:7}}],line:117},"11":{loc:{start:{line:124,column:4},end:{line:133,column:5}},type:"if",locations:[{start:{line:124,column:4},end:{line:133,column:5}},{start:{line:124,column:4},end:{line:133,column:5}}],line:124}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0]},inputSourceMap:{version:3,names:["fs","require","promises","Booking","readJSON","writeJSON","isValidDateFormat","date","dateFormatRegex","test","isValidTimeFormat","time","trim","viewUserBookings","req","res","requestedUsername","params","name","allBookings","userBookings","filter","booking","length","status","json","message","error","addBooking","body","facility","bookingExists","some","newBooking","updatedBookings","updateBooking","id","modified","isBookingConflict","i","currentBooking","writeFile","JSON","stringify","module","exports"],sourceRoot:"C:\\Users\\teiji\\TP Year 2-3 Coding Projects\\DevOps Y2\\BookLah\\utils\\",sources:["bookingUtil.js"],sourcesContent:["const fs = require('fs').promises;\r\nconst { Booking } = require('../models/Booking');\r\nconst { readJSON, writeJSON } = require('./userUtil')\r\n\r\n// Helper function to validate date format\r\nfunction isValidDateFormat(date) {\r\n\r\n    // Regular expression for \"Day/month/year\" format\r\n    const dateFormatRegex = /^\\d{1,2}\\/\\d{1,2}\\/\\d{2}$/;\r\n    //check if the provided date string matches the pattern defined by the regular expression dateFormatRegex.\r\n    return dateFormatRegex.test(date);\r\n}\r\n\r\n// Helper function to validate time format\r\nfunction isValidTimeFormat(time) {\r\n    // You can use a more sophisticated time validation logic if needed\r\n    // For simplicity, this example checks if the time has a valid format\r\n    return typeof time === 'string' && time.trim() !== '';\r\n}\r\n\r\nasync function viewUserBookings(req, res) {\r\n\r\n    const requestedUsername = req.params.name; // Getting name from the route parameter\r\n\r\n    try {\r\n        const allBookings = await readJSON('utils/bookings.json');\r\n\r\n        // Filter bookings based on the requested username\r\n        const userBookings = allBookings.filter(booking => booking.name === requestedUsername);\r\n\r\n        if (userBookings.length === 0) {\r\n            // If no bookings were found for the specified username\r\n            return res.status(404).json({ message: \"No bookings found for the specified user.\" });\r\n        }\r\n\r\n        return res.status(200).json(userBookings);\r\n    } catch (error) {\r\n        return res.status(500).json({ message: error.message });\r\n    }\r\n}\r\n\r\nasync function addBooking(req, res) {\r\n    try {\r\n        const allBookings = await readJSON('utils/bookings.json');\r\n\r\n        const name = req.body.name;\r\n        const facility = req.body.facility;\r\n        const date = req.body.date;\r\n        const time = req.body.time;\r\n\r\n        // Validate date format\r\n        if (!isValidDateFormat(date)) {\r\n            return res.status(400).json({ message: 'Invalid date format. Please provide a valid date.' });\r\n        }\r\n\r\n        // Validate time format\r\n        if (!isValidTimeFormat(time)) {\r\n            return res.status(400).json({ message: 'Invalid time format. Please provide a valid time range.' });\r\n        }\r\n\r\n\r\n        // Check if the proposed booking already exists in the JSON file\r\n        const bookingExists = allBookings.some(\r\n            (booking) =>\r\n                booking.facility === facility &&\r\n                booking.date === date &&\r\n                booking.time === time\r\n        );\r\n\r\n        if (bookingExists) {\r\n            return res.status(400).json({\r\n                message:\r\n                    'The chosen time for this facility is already booked by another person. Please choose another timing.',\r\n            });\r\n        }\r\n\r\n        const newBooking = new Booking(name, facility, date, time);\r\n\r\n        const updatedBookings = await writeJSON(newBooking, 'utils/bookings.json');\r\n\r\n        return res.status(201).json(updatedBookings);\r\n    } catch (error) {\r\n        return res.status(500).json({ message: error.message });\r\n    }\r\n}\r\n\r\nasync function updateBooking(req, res) {\r\n    try {\r\n        const id = req.params.id;\r\n        const facility = req.body.facility;\r\n        const date = req.body.date;\r\n        const time = req.body.time;\r\n\r\n         // Validate date format\r\n         if (!isValidDateFormat(date)) {\r\n            return res.status(400).json({ message: 'Invalid date format. Please provide a valid date.' });\r\n        }\r\n\r\n        // Validate time format\r\n        if (!isValidTimeFormat(time)) {\r\n            return res.status(400).json({ message: 'Invalid time format. Please provide a valid time range.' });\r\n        }\r\n        \r\n        const allBookings = await readJSON('utils/bookings.json');\r\n        var modified = false;\r\n\r\n        // Check if the proposed changes are already booked\r\n        const isBookingConflict = allBookings.some(\r\n            (booking) =>\r\n                booking.id !== id && // Exclude the current booking being updated\r\n                booking.facility === facility &&\r\n                booking.date === date &&\r\n                booking.time === time\r\n        );\r\n\r\n        if (isBookingConflict) {\r\n            return res.status(400).json({\r\n                message:\r\n                    'The chosen time for this facility is already booked by another person. Please choose another timing.',\r\n            });\r\n        }\r\n\r\n        for (var i = 0; i < allBookings.length; i++) {\r\n            var currentBooking = allBookings[i];\r\n            if (currentBooking.id == id) {\r\n                allBookings[i].facility = facility;\r\n                allBookings[i].date = date;\r\n                allBookings[i].time = time;\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        if (modified) {\r\n            await fs.writeFile('utils/bookings.json', JSON.stringify(allBookings), 'utf8');\r\n            return res.status(201).json({ message: 'Booking Updated Successfully!' });\r\n        } else {\r\n            return res.status(500).json({ message: 'Error occurred, unable to Update!' });\r\n        }\r\n    } catch (error) {\r\n        return res.status(500).json({ message: error.message });\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = { viewUserBookings, addBooking, updateBooking }\r\n"],mappings:"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"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"11258aa28b3056631448b470f1b915ff300f6561"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1a6u3c9cxe=function(){return actualCoverage;};}return actualCoverage;}cov_1a6u3c9cxe();const fs=(cov_1a6u3c9cxe().s[0]++,require('fs').promises);const{Booking}=(cov_1a6u3c9cxe().s[1]++,require('../models/Booking'));const{readJSON,writeJSON}=(cov_1a6u3c9cxe().s[2]++,require('./userUtil'));// Helper function to validate date format
function isValidDateFormat(date){cov_1a6u3c9cxe().f[0]++;// Regular expression for "Day/month/year" format
const dateFormatRegex=(cov_1a6u3c9cxe().s[3]++,/^\d{1,2}\/\d{1,2}\/\d{2}$/);//check if the provided date string matches the pattern defined by the regular expression dateFormatRegex.
cov_1a6u3c9cxe().s[4]++;return dateFormatRegex.test(date);}// Helper function to validate time format
function isValidTimeFormat(time){cov_1a6u3c9cxe().f[1]++;cov_1a6u3c9cxe().s[5]++;// You can use a more sophisticated time validation logic if needed
// For simplicity, this example checks if the time has a valid format
return(cov_1a6u3c9cxe().b[0][0]++,typeof time==='string')&&(cov_1a6u3c9cxe().b[0][1]++,time.trim()!=='');}async function viewUserBookings(req,res){cov_1a6u3c9cxe().f[2]++;const requestedUsername=(cov_1a6u3c9cxe().s[6]++,req.params.name);// Getting name from the route parameter
cov_1a6u3c9cxe().s[7]++;try{const allBookings=(cov_1a6u3c9cxe().s[8]++,await readJSON('utils/bookings.json'));// Filter bookings based on the requested username
const userBookings=(cov_1a6u3c9cxe().s[9]++,allBookings.filter(booking=>{cov_1a6u3c9cxe().f[3]++;cov_1a6u3c9cxe().s[10]++;return booking.name===requestedUsername;}));cov_1a6u3c9cxe().s[11]++;if(userBookings.length===0){cov_1a6u3c9cxe().b[1][0]++;cov_1a6u3c9cxe().s[12]++;// If no bookings were found for the specified username
return res.status(404).json({message:"No bookings found for the specified user."});}else{cov_1a6u3c9cxe().b[1][1]++;}cov_1a6u3c9cxe().s[13]++;return res.status(200).json(userBookings);}catch(error){cov_1a6u3c9cxe().s[14]++;return res.status(500).json({message:error.message});}}async function addBooking(req,res){cov_1a6u3c9cxe().f[4]++;cov_1a6u3c9cxe().s[15]++;try{const allBookings=(cov_1a6u3c9cxe().s[16]++,await readJSON('utils/bookings.json'));const name=(cov_1a6u3c9cxe().s[17]++,req.body.name);const facility=(cov_1a6u3c9cxe().s[18]++,req.body.facility);const date=(cov_1a6u3c9cxe().s[19]++,req.body.date);const time=(cov_1a6u3c9cxe().s[20]++,req.body.time);// Validate date format
cov_1a6u3c9cxe().s[21]++;if(!isValidDateFormat(date)){cov_1a6u3c9cxe().b[2][0]++;cov_1a6u3c9cxe().s[22]++;return res.status(400).json({message:'Invalid date format. Please provide a valid date.'});}else{cov_1a6u3c9cxe().b[2][1]++;}// Validate time format
cov_1a6u3c9cxe().s[23]++;if(!isValidTimeFormat(time)){cov_1a6u3c9cxe().b[3][0]++;cov_1a6u3c9cxe().s[24]++;return res.status(400).json({message:'Invalid time format. Please provide a valid time range.'});}else{cov_1a6u3c9cxe().b[3][1]++;}// Check if the proposed booking already exists in the JSON file
const bookingExists=(cov_1a6u3c9cxe().s[25]++,allBookings.some(booking=>{cov_1a6u3c9cxe().f[5]++;cov_1a6u3c9cxe().s[26]++;return(cov_1a6u3c9cxe().b[4][0]++,booking.facility===facility)&&(cov_1a6u3c9cxe().b[4][1]++,booking.date===date)&&(cov_1a6u3c9cxe().b[4][2]++,booking.time===time);}));cov_1a6u3c9cxe().s[27]++;if(bookingExists){cov_1a6u3c9cxe().b[5][0]++;cov_1a6u3c9cxe().s[28]++;return res.status(400).json({message:'The chosen time for this facility is already booked by another person. Please choose another timing.'});}else{cov_1a6u3c9cxe().b[5][1]++;}const newBooking=(cov_1a6u3c9cxe().s[29]++,new Booking(name,facility,date,time));const updatedBookings=(cov_1a6u3c9cxe().s[30]++,await writeJSON(newBooking,'utils/bookings.json'));cov_1a6u3c9cxe().s[31]++;return res.status(201).json(updatedBookings);}catch(error){cov_1a6u3c9cxe().s[32]++;return res.status(500).json({message:error.message});}}async function updateBooking(req,res){cov_1a6u3c9cxe().f[6]++;cov_1a6u3c9cxe().s[33]++;try{const id=(cov_1a6u3c9cxe().s[34]++,req.params.id);const facility=(cov_1a6u3c9cxe().s[35]++,req.body.facility);const date=(cov_1a6u3c9cxe().s[36]++,req.body.date);const time=(cov_1a6u3c9cxe().s[37]++,req.body.time);// Validate date format
cov_1a6u3c9cxe().s[38]++;if(!isValidDateFormat(date)){cov_1a6u3c9cxe().b[6][0]++;cov_1a6u3c9cxe().s[39]++;return res.status(400).json({message:'Invalid date format. Please provide a valid date.'});}else{cov_1a6u3c9cxe().b[6][1]++;}// Validate time format
cov_1a6u3c9cxe().s[40]++;if(!isValidTimeFormat(time)){cov_1a6u3c9cxe().b[7][0]++;cov_1a6u3c9cxe().s[41]++;return res.status(400).json({message:'Invalid time format. Please provide a valid time range.'});}else{cov_1a6u3c9cxe().b[7][1]++;}const allBookings=(cov_1a6u3c9cxe().s[42]++,await readJSON('utils/bookings.json'));var modified=(cov_1a6u3c9cxe().s[43]++,false);// Check if the proposed changes are already booked
const isBookingConflict=(cov_1a6u3c9cxe().s[44]++,allBookings.some(booking=>{cov_1a6u3c9cxe().f[7]++;cov_1a6u3c9cxe().s[45]++;return(cov_1a6u3c9cxe().b[8][0]++,booking.id!==id)&&(cov_1a6u3c9cxe().b[8][1]++,// Exclude the current booking being updated
booking.facility===facility)&&(cov_1a6u3c9cxe().b[8][2]++,booking.date===date)&&(cov_1a6u3c9cxe().b[8][3]++,booking.time===time);}));cov_1a6u3c9cxe().s[46]++;if(isBookingConflict){cov_1a6u3c9cxe().b[9][0]++;cov_1a6u3c9cxe().s[47]++;return res.status(400).json({message:'The chosen time for this facility is already booked by another person. Please choose another timing.'});}else{cov_1a6u3c9cxe().b[9][1]++;}cov_1a6u3c9cxe().s[48]++;for(var i=(cov_1a6u3c9cxe().s[49]++,0);i<allBookings.length;i++){var currentBooking=(cov_1a6u3c9cxe().s[50]++,allBookings[i]);cov_1a6u3c9cxe().s[51]++;if(currentBooking.id==id){cov_1a6u3c9cxe().b[10][0]++;cov_1a6u3c9cxe().s[52]++;allBookings[i].facility=facility;cov_1a6u3c9cxe().s[53]++;allBookings[i].date=date;cov_1a6u3c9cxe().s[54]++;allBookings[i].time=time;cov_1a6u3c9cxe().s[55]++;modified=true;}else{cov_1a6u3c9cxe().b[10][1]++;}}cov_1a6u3c9cxe().s[56]++;if(modified){cov_1a6u3c9cxe().b[11][0]++;cov_1a6u3c9cxe().s[57]++;await fs.writeFile('utils/bookings.json',JSON.stringify(allBookings),'utf8');cov_1a6u3c9cxe().s[58]++;return res.status(201).json({message:'Booking Updated Successfully!'});}else{cov_1a6u3c9cxe().b[11][1]++;cov_1a6u3c9cxe().s[59]++;return res.status(500).json({message:'Error occurred, unable to Update!'});}}catch(error){cov_1a6u3c9cxe().s[60]++;return res.status(500).json({message:error.message});}}cov_1a6u3c9cxe().s[61]++;module.exports={viewUserBookings,addBooking,updateBooking};//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,